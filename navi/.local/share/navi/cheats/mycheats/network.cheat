% network

# get current default ip gateway route
command ip -d -json route | jq '.[] | select(.dst == "default")'

# Kill a process running on a given port
sudo lsof -i :<port> \
   | awk '{l=$2} END {print l}' \
   | xargs kill

# Kill a process for port
port="$(echo "<process>" | grep -Eo ':([0-9][0-9][0-9]+) ' | tr -d ':')"
sudo lsof -i :$port \
   | awk '{l=$2} END {print l}' \
   | xargs kill

# List IP addresses connected on a given port
netstat -tn 2>/dev/null \
   | grep :<port> \
   | awk '{print $5}' \
   | cut -d: -f1 \
   | sort \
   | uniq -c \
   | sort -nr \
   | head

# Find external, public IP address
dig +short myip.opendns.com @resolver1.opendns.com

# Find primary, local IP address
ifconfig \
  | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' \
  | grep -Eo '([0-9]*\.){3}[0-9]*' \
  | grep -v '127.0.0.1' \
  | tail -n1

# Geolocation data given an IP
curl -sL "ipinfo.io/<ip>" | jq

# Geolocation data for own IP
curl -sL "ipinfo.io/<self_global_ip>" | jq

# Map ports
sudo nmap -sS -sV -0 "<target>"

# Port owner
sudo lsof -n -i4TCP:<port> | grep LISTEN

# List open ports
sudo lsof -Pn -i4

# verbosely scan for listening daemons without sending any data to them with netcat
nc -vz

# brief output of ip tool
ip -brief

# json output for ip tool
ip -json

# print human readable network stats(RX,TX,packets,dropped,errors,missed,mcast,collisions,carrier) for each interface
ip -iec -s addr

# show detailed interface information
ip -json -d link show <interface> | jq .

# bring up interface
sudo ip link set <interface> up

# bring down interface
sudo ip link set <interface> down

# display timestamp and report ICMP ECHO reply
ping -D -O <destination>

# ping cloudflare dns
ping -D -O 1.1.1.1

# ping google dns
ping -D -O 8.8.8.8

# do fast pings
ping -c 100 -i 0.2 <destination>


# output to stdout for wireshark
sudo tcpdump -i any -s 0 -U -w - | wireshark -k -i -

# dnsmasq dhcp server with boot
dnsmasq --no-daemon --keep-in-foreground --log-queries --interface=enlan --bind-interfaces --dhcp-range=10.0.41.2,10.0.41.254,1h --dhcp-boot


# create a random mac
mac_generate.sh


$ interface: ip -json link | jq -r '.[].ifname'
$ self_global_ip: dig +short myip.opendns.com @resolver1.opendns.com
$ process: lsof -iTCP -sTCP:LISTEN -n -P | sed -E "s/:([0-9][0-9][0-9]+) /:$(tput setaf 3)\1$(tput sgr0) /g" --- --header-lines 1
