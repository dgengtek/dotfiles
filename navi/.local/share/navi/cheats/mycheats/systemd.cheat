% service

# debug systemd
sudo -E SYSTEMD_LOG_LEVEL=debug

# on the next boot open a root login shell on tty9 very early in the boot process, disable after debug, on tty9
sudo systemctl enable debug-shell

# Start service
systemctl start <service_inactive>

# dump environment variables
systemctl show-environment

# start user service
systemctl --user start <service_user_inactive>

# Stop service
systemctl stop <service_active>

# stop user service
systemctl --user stop <service_user_active>

# Enable service
systemctl enable <service_disabled>

# enable user service
systemctl --user enable <service_user_disabled>

# enable service and start now
systemctl enable --now <service_disabled>

# Disable service
systemctl disable <service_enabled>

# disable service and stop now
systemctl disable --now <service_enabled>

# Restart service
systemctl restart <service>

# restart user service
systemctl --user restart <service_user>

# Reload service
systemctl reload <service_active>

# reload user service
systemctl --user reload <service_user_active>

# Service status
systemctl status <service>

# user service status
systemctl --user status <service_user>

# reload systemctl daemon and units
systemctl daemon-reload

# reload user systemctl daemon and units
systemctl --user daemon-reload

# get default target which you boot into
systemctl get-default

# list systemctl target units
systemctl --type target

# List running services
systemctl list-units --type=service --state=running

# list active targets
systemctl list-units --type target --state active

# List enabled services
systemctl list-unit-files --type=service --state=enabled

# List disabled services
systemctl list-unit-files --type=service --state=disabled

# package logs for debugging
journalctl -b --no-pager -u <service> | gzip -9 > /tmp/"$(hostname)-$(date +%Y-%m-%dT%H-%M-%SZ)-<service>.log.gz"


$ service_inactive: systemctl list-units --type=service --state=inactive | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_user_inactive: systemctl --user list-units --type=service --state=inactive | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_active: systemctl list-units --type=service --state=active | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_user_active: systemctl --user list-units --type=service --state=active | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_enabled: systemctl list-unit-files --type=service --state=enabled | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_user_enabled: systemctl --user list-unit-files --type=service --state=enabled | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_disabled: systemctl list-unit-files --type=service --state=disabled | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_user_disabled: systemctl --user list-unit-files --type=service --state=disabled | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service: systemctl list-units --type=service --all | awk '{print $1}' | grep .service | sed 's/.service$//'
$ service_user: systemctl --user list-units --type=service --all | awk '{print $1}' | grep .service | sed 's/.service$//'


% journal, log
@ template, reuse

# use journal from another location
journalctl --directory <path>
