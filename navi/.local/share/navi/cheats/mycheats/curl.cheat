% curl, http

# send a get http request
curl <url>

# fetch HEAD only headers of a url
curl -sLI <url>

# unshorten url and find out location it points to
curl -sLI <url> | rg location:

# send a http request
curl -X <method> <url>

# send a http request and write the output to a file
curl -X <method> <url> -o <filename>

# send a get http request and follow redirects
curl -L <url>

# send a get http request exit with a non-zero status code on failure
curl --fail <url>

# send an authenticated http request
curl -u <username>:<password> -X <method> <url>

# send a http request with a json body
curl -X <method> <url>  -H 'Content-Type: application/json' -d '<json>'

# send a http request with a form body
curl <url> -d <bodykey>=<bodyvalue>

# send a http request and see the request as well as the response
curl -v <url>

# send a http request wih a body from a file
curl -X <method> <url> --data-binary "@<file>"

# send a http request wih a custom header
curl -X <method> <url> -H "<headername>: <headervalue>"

# list FTP POP3
curl --list-only

# test a download with curl
curl --output /dev/null --max-time <max_time> --location --verbose --include <url>

# display verbose stats for curl
curl --output /dev/null --max-time 30 --location --verbose --include --write-out '
  \ncontent_type: %{content_type}\
  \nfilename_effective: %{filename_effective}\
  \nhttp_code: %{http_code}\
  \nhttp_connect: %{http_connect}\
  \nhttp_version: %{http_version}\
  \nlocal_ip:local_port: %{local_ip}:%{local_port}\
  \nnum_connects: %{num_connects}\
  \nnum_redirects: %{num_redirects}\
  \nproxy_ssl_verify_result(0 = success): %{proxy_ssl_verify_result}\
  \nredurect_url: %{redirect_url}\
  \nremote_ip:remote_port: %{remote_ip}:%{remote_port}\
  \nscheme: %{scheme}\
  \nsize_download: %{size_download} B\
  \nsize_header: %{size_header} B\
  \nsize_request: %{size_request} B\
  \nsize_upload: %{size_upload} B\
  \nspeed_download: %{speed_download} B/s\
  \nspeed_upload: %{speed_upload} B/s\
  \nssl_verify_result(0 = success): %{ssl_verify_result}\
  \ntime_appconnect: %{time_appconnect} s\
  \ntime_connect: %{time_connect} s\
  \ntime_namelookup: %{time_namelookup} s\
  \ntime_pretransfer: %{time_pretransfer} s\
  \ntime_redirect: %{time_redirect} s\
  \ntime_starttransfer: %{time_starttransfer} s\
  \ntime_total: %{time_total} s\
  \nurl_effective: %{url_effective}
'

$ file: ls
$ method: echo -e 'GET\nPOST\nPUT\nDELETE\nPATCH'
$ max_time: echo -e '30\n'
