% edit, string
@ template, reuse

# edit and pipe output to some command
vipe <&- |

# view all files readonly
fd --size +1b --type f --exec-batch vim -R {} \;

# run nvim clean without plugins
nvim --clean --noplugin

# run vim without any config
vim -u NONE

# prepend
sed "1s;^;${some_var}\n;"

# remove all spaces from string
sed '/^$/d;G'

# convert unix endline to dos endline
sed 's/$/echo \\\r/'

# convert dos endline to unix endline
sed 's/
$//'

# convert newline to escaped newline
sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g'

# remove leading whitespace, tabs
sed 's/^[ \t]*//'

# remove trailing whitespace, tabs
sed 's/[ \t]*$//'

# remove newlines
tr -d '\n'

# remove tabs
tr -d '\t'

# translate to lowercase
tr 'A-Z' 'a-z'

# translate to uppercase
tr 'a-z' 'A-Z'

# remove all white space characters, spaces, tabs, new lines
tr -d '[:blank:][:space:]'

# open all search results with vim
fd --type f <pattern> -X vim

# search for pattern and edit with vim
rg --ignore-case --files-with-matches --follow <pattern> | xargs_vim.sh

# search for filename and edit
f.sh | xargs_vim.sh

# search for pattern and replace
search="<pattern>";rg --ignore-case --files-with-matches --follow "$search" | xargs sed -i "s<delimiter>$search<delimiter><replacement><delimiter>"

# print random line from file
random_line.py <compgen_file_cwd>

# print a random line and delete it
cp <compgen_file_cwd>{,.bak}; r=$(random_line.py <compgen_file_cwd>.bak) && sed -i "/$r/ d" <compgen_file_cwd>.bak && echo $r

# filter hostname
tr -dc '[:alnum:]-'

# filter string from stdin
canonize.sh

# filter prefix and suffix
awk '{ sub(/[ \t]+$/, ""); sub(/^[ \t]+/, ""); print }'

# filter filenames
filename_canonize.py

# create a patch file
diff -u <file> <new_file> > <file>.patch

# apply a patch
patch <file> < <patch_filename>

# revert a patch
patch -R <file> < <patch_filename>

# create a patch for a directory
diff -ruN <directory> <new_directory> > <directory>.patch

# apply patch to directory
patch -p0 < <patch_filename>

# undo patch to directory
patch -R -p0 < <patch_filename>

$ delimiter: echo -e ",\n"
