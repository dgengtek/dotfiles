% edit, string
@ template, reuse

# edit and pipe output to some command
vipe <&- |

# view all files readonly
fd --size +1b --type f --exec-batch vim -R {} \;

# run vim without any config
vim -u NONE

# remove all spaces from string
sed '/^$/d;G'

# convert unix endline to dos endline
sed 's/$/echo \\\r/'

# convert dos endline to unix endline
sed 's/$//'

# convert newline to escaped newline
sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g'

# remove leading whitespace, tabs
sed 's/^[ \t]*//'

# remove trailing whitespace, tabs
sed 's/[ \t]*$//'

# remove newlines
tr '\n'

# remove tabs
tr '\t'

# translate to lowercase
tr 'A-Z' 'a-z'

# translate to uppercase
tr 'a-z' 'A-Z'

# open all search results with vim
fd --type f <pattern> -X vim

# search for pattern and edit with vim
rg --ignore-case --files-with-matches --follow <pattern> | xargs_vim.sh

# search for filename and edit
f.sh | xargs_vim.sh

# search for pattern and replace
search="<pattern>";rg --ignore-case --files-with-matches --follow "$pattern" | xargs sed -i "s<delimiter>$search<delimiter><replacement><delimiter>"

# print random line from file
lines=$(wc -l <compgen_file_cwd> | awk '{print $1}'); randint=$(python -c "from random import randint;print(randint(1,${lines}), end='')"); sed -n "${randint}p" <compgen_file_cwd>

$ delimiter: echo -e ",\n"
